
### 1. LOCAL - Health Check
GET http://localhost:8080/health

### 2. LOCAL - API Root
GET http://localhost:8080/

### 3. LOCAL - Get All Contacts (Check current state)
GET http://localhost:8080/contacts

### ========================================
### LOCAL - CREATE CONTACTS (POST)
### Copy the contactId from each response for use in UPDATE/DELETE
### ========================================

### 4. LOCAL - Create Contact 1 (Alice)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Alice",
  "lastName": "Williams",
  "email": "alice.williams@example.com",
  "favoriteColor": "purple",
  "birthday": "1988-12-05"
}

### 5. LOCAL - Create Contact 2 (Michael)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Michael",
  "lastName": "Thompson",
  "email": "michael.thompson@example.com",
  "favoriteColor": "green",
  "birthday": "1985-03-10"
}

### 6. LOCAL - Create Contact 3 (Sarah)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Sarah",
  "lastName": "Johnson",
  "email": "sarah.johnson@example.com",
  "favoriteColor": "blue",
  "birthday": "1992-07-15"
}

### ========================================
### LOCAL - READ OPERATIONS (GET)
### Replace REPLACE_WITH_ACTUAL_ID with real IDs from POST responses above
### ========================================

### 7. LOCAL - Get Alice by ID
GET http://localhost:8080/contacts/REPLACE_WITH_ACTUAL_ID

### 8. LOCAL - Get Michael by ID
GET http://localhost:8080/contacts/REPLACE_WITH_ACTUAL_ID

### 9. LOCAL - Get All Contacts Again (Verify 3 new contacts exist)
GET http://localhost:8080/contacts

### ========================================
### LOCAL - UPDATE OPERATIONS (PUT)
### Replace REPLACE_WITH_ACTUAL_ID with real IDs
### ========================================

### 10. LOCAL - Update Alice
PUT http://localhost:8080/contacts/REPLACE_WITH_ACTUAL_ID
Content-Type: application/json

{
  "firstName": "Alice",
  "lastName": "Williams-Updated",
  "email": "alice.updated@example.com",
  "favoriteColor": "teal",
  "birthday": "1988-12-05"
}

### 11. LOCAL - Update Michael
PUT http://localhost:8080/contacts/REPLACE_WITH_ACTUAL_ID
Content-Type: application/json

{
  "firstName": "Michael",
  "lastName": "Thompson-Updated",
  "email": "michael.updated@example.com",
  "favoriteColor": "orange",
  "birthday": "1985-03-10"
}

### ========================================
### LOCAL - DELETE OPERATIONS (DELETE)
### Replace REPLACE_WITH_ACTUAL_ID with real IDs
### ========================================

### 12. LOCAL - Delete Sarah
DELETE http://localhost:8080/contacts/REPLACE_WITH_ACTUAL_ID

### 13. LOCAL - Verify Sarah was deleted (should return 404)
GET http://localhost:8080/contacts/REPLACE_WITH_ACTUAL_ID

### ========================================
### LOCAL - ERROR HANDLING TESTS
### ========================================

### 14. LOCAL - Test validation (missing fields - should return 400)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Incomplete"
}

### 15. LOCAL - Test validation (invalid email - should return 400)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Bad",
  "lastName": "Email",
  "email": "not-an-email",
  "favoriteColor": "blue",
  "birthday": "1990-01-01"
}

### 16. LOCAL - Test invalid ID format (should return 400)
GET http://localhost:8080/contacts/invalid-id

### 17. LOCAL - Test non-existent ID (should return 404)
GET http://localhost:8080/contacts/507f1f77bcf86cd799439011

### ========================================
### PRODUCTION ENVIRONMENT TESTING
### Replace "cse341-hwv1.onrender.com" with your actual Render URL
### ========================================

### 18. PRODUCTION - Health Check
GET https://cse341-hwv1.onrender.com/health

### 19. PRODUCTION - API Root
GET https://cse341-hwv1.onrender.com/

### 20. PRODUCTION - Get All Contacts (Check current state)
GET https://cse341-hwv1.onrender.com/contacts

### ========================================
### PRODUCTION - CREATE CONTACTS (POST)
### Copy the contactId from each response for use in UPDATE/DELETE
### ========================================

### 21. PRODUCTION - Create Contact 1 (Production Alice)
POST https://cse341-hwv1.onrender.com/contacts
Content-Type: application/json

{
  "firstName": "Production",
  "lastName": "Alice",
  "email": "prod.alice@example.com",
  "favoriteColor": "gold",
  "birthday": "1990-01-01"
}

### 22. PRODUCTION - Create Contact 2 (Production Bob)
POST https://cse341-hwv1.onrender.com/contacts
Content-Type: application/json

{
  "firstName": "Production",
  "lastName": "Bob",
  "email": "prod.bob@example.com",
  "favoriteColor": "silver",
  "birthday": "1985-05-15"
}

### ========================================
### PRODUCTION - READ OPERATIONS (GET)
### Replace REPLACE_WITH_PRODUCTION_ID with actual production IDs
### ========================================

### 23. PRODUCTION - Get Production Alice by ID
GET https://cse341-hwv1.onrender.com/contacts/REPLACE_WITH_PRODUCTION_ID

### 24. PRODUCTION - Get All Production Contacts
GET https://cse341-hwv1.onrender.com/contacts

### ========================================
### PRODUCTION - UPDATE OPERATIONS (PUT)
### Replace REPLACE_WITH_PRODUCTION_ID with actual production IDs
### ========================================

### 25. PRODUCTION - Update Production Alice
PUT https://cse341-hwv1.onrender.com/contacts/REPLACE_WITH_PRODUCTION_ID
Content-Type: application/json

{
  "firstName": "Production",
  "lastName": "Alice-Updated",
  "email": "prod.alice.updated@example.com",
  "favoriteColor": "platinum",
  "birthday": "1990-01-01"
}

### ========================================
### PRODUCTION - DELETE OPERATIONS (DELETE)
### Replace REPLACE_WITH_PRODUCTION_ID with actual production IDs
### ========================================

### 26. PRODUCTION - Delete Production Bob
DELETE https://cse341-hwv1.onrender.com/contacts/REPLACE_WITH_PRODUCTION_ID

### 27. PRODUCTION - Verify Bob was deleted (should return 404)
GET https://cse341-hwv1.onrender.com/contacts/REPLACE_WITH_PRODUCTION_ID

### ========================================
### PRODUCTION - ERROR HANDLING TESTS
### ========================================

### 28. PRODUCTION - Test validation (missing fields - should return 400)
POST https://cse341-hwv1.onrender.com/contacts
Content-Type: application/json

{
  "firstName": "Incomplete"
}

### 29. PRODUCTION - Test invalid ID format (should return 400)
GET https://cse341-hwv1.onrender.com/contacts/invalid-id

### 30. PRODUCTION - Test non-existent ID (should return 404)
GET https://cse341-hwv1.onrender.com/contacts/507f1f77bcf86cd799439011

### ========================================
### API DOCUMENTATION TESTS
### ========================================

### 31. LOCAL - Swagger Documentation
GET http://localhost:8080/api-docs

### 32. PRODUCTION - Swagger Documentation
GET https://cse341-hwv1.onrender.com/api-docs

