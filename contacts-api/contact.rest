### =========================
### STEP-BY-STEP WORKFLOW
### =========================
### 1. Run health check first
### 2. Get all contacts to see current state  
### 3. Create contacts and note the returned IDs
### 4. Use those IDs in subsequent tests

### =========================
### HEALTH & INFO
### =========================

### Health Check
GET http://localhost:8080/health

### Server Info
GET http://localhost:8080/

### Current Contacts (ALWAYS RUN THIS FIRST)
GET http://localhost:8080/contacts

### =========================
### CREATE CONTACTS (Run these first, copy IDs from responses)
### =========================

### Create Alice - COPY THE contactId FROM RESPONSE
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Alice",
  "lastName": "Williams",
  "email": "alice.williams@example.com",
  "favoriteColor": "purple",
  "birthday": "1988-12-05"
}

### Create Michael - COPY THE contactId FROM RESPONSE  
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Michael",
  "lastName": "Thompson",
  "email": "michael.thompson@example.com", 
  "favoriteColor": "green",
  "birthday": "1985-03-10"
}

### Create Test User - COPY THE contactId FROM RESPONSE
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Test",
  "lastName": "User",
  "email": "test.user@example.com",
  "favoriteColor": "blue", 
  "birthday": "1990-01-01"
}

### =========================
### AFTER CREATING CONTACTS ABOVE:
### 1. Copy the contactId from each response
### 2. Replace the placeholder IDs below with actual IDs
### 3. Then run the tests below
### =========================

### Get Alice (replace with Alice's actual ID)
GET http://localhost:8080/contacts/ALICE_ID_HERE

### Get Michael (replace with Michael's actual ID)
GET http://localhost:8080/contacts/MICHAEL_ID_HERE

### Update Alice (replace with Alice's actual ID)
PUT http://localhost:8080/contacts/ALICE_ID_HERE
Content-Type: application/json

{
  "firstName": "Alice",
  "lastName": "Williams UPDATED",
  "email": "alice.updated@example.com",
  "favoriteColor": "teal",
  "birthday": "1988-12-05"
}

### Update Michael (replace with Michael's actual ID)  
PUT http://localhost:8080/contacts/MICHAEL_ID_HERE
Content-Type: application/json

{
  "firstName": "Michael",
  "lastName": "Thompson UPDATED", 
  "email": "michael.updated@example.com",
  "favoriteColor": "orange",
  "birthday": "1985-03-10"
}

### Delete Test User (replace with Test User's actual ID)
DELETE http://localhost:8080/contacts/TEST_USER_ID_HERE

### =========================
### VALIDATION TESTS (These should fail as expected)
### =========================

### Missing fields test (should return 400 error)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Test"
}

### Invalid email test (should return 400 error)
POST http://localhost:8080/contacts
Content-Type: application/json

{
  "firstName": "Test",
  "lastName": "User",
  "email": "invalid-email", 
  "favoriteColor": "blue",
  "birthday": "1990-01-01"
}

### Invalid ID test (should return 400 error)
GET http://localhost:8080/contacts/invalid-id

### Non-existent ID test (should return 404 error)  
GET http://localhost:8080/contacts/507f1f77bcf86cd799439011

### =========================
### PRODUCTION TESTS
### =========================

### Production Health
GET https://cse341-hwv1.onrender.com/health

### Production Current Contacts  
GET https://cse341-hwv1.onrender.com/contacts

### Production Create Contact
POST https://cse341-hwv1.onrender.com/contacts
Content-Type: application/json

{
  "firstName": "Production",
  "lastName": "Test",
  "email": "production.test@example.com",
  "favoriteColor": "gold",
  "birthday": "1995-06-15"
}
